# run test with python3 -m doctest -v ./tests/2-matrix_divided.txt

First import method to test
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

SUCCESS CASES:

Test signed and unsigned ints and floats in same size lists in list matrix:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [[-1, -2, 3], [4, -5, 6]]
    >>> print(matrix_divided(matrix, 2))
    [[-0.5, -1.0, 1.5], [2.0, -2.5, 3.0]]

    >>> matrix = [[-1.5, -2.6, 3], [4.7, -5, 6.2]]
    >>> print(matrix_divided(matrix, 2))
    [[-0.75, -1.3, 1.5], [2.35, -2.5, 3.1]]

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> type(matrix_divided(matrix, 2))
    <class 'list'>
    >>> type(matrix_divided(matrix, 2)[0])
    <class 'list'>

FAIL CASES:

Test empty matrix:

    >>> matrix = []
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[], [], []]
    >>> print(matrix_divided(matrix, 2))
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test different sized lists in matrix:
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7]]
    >>> print(matrix_divided(matrix, 2))
    ...
    TypeError: Each row of the matrix must have the same size

Test matrix with other data types:

    >>> matrix = [["hi", "you"], [4, 5, 6], [7]]
    >>> print(matrix_divided(matrix, 2))
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2, 3], [4, 5, 6], {7, 8 ,9}]
    >>> print(matrix_divided(matrix, 2))
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2, 3], [4, 5, 6], {"a" : 7, "b" : 8 ,"c" : 9}]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test args:
    >>> matrix = [[1, 2], [3, 4]]
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix = [[1, 2], [3, 4]]
    >>> print(matrix_divided(matrix, 2, 10))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Test div = 0 & non_int:

    >>> matrix = [[1, 2], [3, 4]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix = [[1, 2], [3, 4]]
    >>> print(matrix_divided(matrix, "2"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number